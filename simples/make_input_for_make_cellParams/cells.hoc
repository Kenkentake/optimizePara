load_file("nrngui.hoc")

begintemplate lalvpc_single

public soma, makeSyn, synlist, connect2target
create soma
objref esyn
objref synlist

proc init(){local x, y, z, mode, i
    x = $1
    y = $2
    z = $3
    //excitatory cell or inhibitory cell
    mode = $4
    
    if(mode < 0){
	mode = 1
    }
    
    soma {
	pt3dclear() pt3dadd(0+x, 0+y, 0+z, 12) pt3dadd(15+x, 0+y, 0+z, 12)
    }
    
    soma {
	L = 100
	diam = 300 * ( 1 + 0.8 * mode)
	nseg = 10
	Ra = 100
	cm = 1
	insert GPeA
	
	gnabar_GPeA = 0.12//0.19
	gkdrbar_GPeA = 0.0175//0.06
	gl_GPeA = 0.0003//0.0001
	gcatbar_GPeA = 0.0003//0.005
	gkcabar_GPeA = 0.01//0.004
	ena_GPeA = 55
	ek_GPeA = -70		
	el_GPeA = -50//-54.3
	eca_GPeA = 124
	gA_GPeA = 0.022
	a_sk_GPeA = 11e-2
	offset_GPeA = 0.0
	coef_log_GPeA = 3
	tau_sk_GPeA = 1200
	coef_scale_C_GPeA = 0.75
	coef_intercept_GPeA = 1.120
	power_q_GPeA = 1.5
	qinf_scale_GPeA = 1.15
	// gnabar_GPeA = 0.12//0.12//0.19
	
    // 	gkdrbar_GPeA = 0.005//0.06
    // 	gl_GPeA = 0.0003//0.0001
    // 	gcatbar_GPeA = 0.0001//0.005
    // 	gkcabar_GPeA = 0.002//0.004
    // 	ena_GPeA = 55
    // 	ek_GPeA = -70		
    // 	el_GPeA = -50//-54.3
    // 	eca_GPeA = 124
     }
    synlist = new List()
    soma {
	esyn = new Exp2Syn(0.5)
	synlist.append(esyn)//for stimulating by IClamp or Netstim
    }
}

obfunc connect2target(){localobj nc
    soma nc = new NetCon(&v(0.5), $o1)
    nc.threshold = 10
    if(numarg()==2){ $o2 = nc }
    return nc
}

objref syn_

obfunc makeSyn(){local reversal_v
    
    reversal_v = $1
    
    soma {
	syn_ = new Exp2Syn(0.5)
	synlist.append(syn_)
	syn_.e = reversal_v
    }
    return syn_
}

endtemplate lalvpc_single